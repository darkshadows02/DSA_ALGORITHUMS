#include <bits/stdc++.h> 
  struct Node{
         private:
        Node*links[26];
        bool flg;
        public:
          bool containskey(char ch){
               return links[ch-'a']!=NULL;
          }
          void put(char ch, Node*node){
              links[ch-'a']=node;
          }
          Node*get(char ch){
              return links[ch-'a'];
          }
         void  setEnd(){
                  flg=true;
          }
          bool isend(){
              return flg;
          }
          
  };

   class Trie{
         Node*root;
        public:
           Trie(){
               root=new Node();
           }

             void insert(string l){
                 Node*node=root;
                    for(int i=0; i<l.size(); i++){
                            if(!node->containskey(l[i])){
                                node->put(l[i], new Node());
                            }
                            node=node->get(l[i]);
                    }
                    node->setEnd();
             }
             bool checkprifixall(string l){
                     Node*node=root;
                       for(int i=0; i<l.size(); i++){
                             if(node->containskey(l[i])){
                                   node=node->get(l[i]);
                               if(node->isend()==false){
                                   return false;
                               }
                             } else {
                               return false;
                             }
                       }
                       return true;
             }

   };
string completeString(int n, vector<string> &a){
              Trie *trie=new Trie();
              for(auto &x:a){
                  trie->insert(x);
              }
              string ans="";
              for(auto x:a){
                     if(trie->checkprifixall(x)){
                              
                               if(ans.size()<x.size()){
                                   ans=x;
                               }else if(ans.size()==x.size() && ans>x){
                                   ans=x;
                               }
                     }
              }
              if(ans==""){
                  return "None";
              }
              return ans;
}
